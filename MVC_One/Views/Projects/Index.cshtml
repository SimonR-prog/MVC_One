@model ProjectsViewModel
@{
    ViewData["Title"] = "Projects";
}

<div id="projects" class="page">
    <div class="page-header">
        <h1>Projects</h1>
        <button type="button" class="btn" data-type="modal" data-target="#add-projects-modal">
            <i class="fa-duotone fa-solid fa-plus"></i>
            <span>Add Project</span>
        </button>
    </div>

    <section class="project-list">
        @if (Model.Projects != null && Model.Projects.Any())
        {
            @foreach (var project in Model.Projects)
            {
                @await Html.PartialAsync("Partials/Components/_ProjectListItem", project)
            }
        }
    </section>
</div>

@await Html.PartialAsync("Partials/Modals/_AddProjectsModal", Model.AddProjectFormData)
@await Html.PartialAsync("Partials/Modals/_UpdateProjectModal", Model.UpdateProjectFormData)


<script src="~/js/validate.js"></script>
<script>
    document.querySelector("#add-projects-modal form").addEventListener("submit", async function (e) {
        e.preventDefault();

        const form = e.target;
        const formData = new FormData(form);

        const response = await fetch("/Projects/Create", {
            method: "POST",
            body: formData
        });

        const result = await response.json();

        if (result.success) {
            location.reload();
        } else {
            showValidationErrors(result.errors);
        }
    });

    document.querySelector("#update-project-modal form").addEventListener("submit", async function (e) {
        e.preventDefault();

        const form = e.target;
        const formData = new FormData(form);

        const response = await fetch("/Projects/Update", {
            method: "POST",
            body: formData
        });

        const result = await response.json();

        if (result.success) {
            location.reload();
        } else {
            showValidationErrors(result.errors);
        }
    });
</script>